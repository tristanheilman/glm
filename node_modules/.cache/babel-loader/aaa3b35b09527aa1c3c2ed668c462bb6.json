{"ast":null,"code":"import * as React from 'react';\nimport NavigationStateContext from './NavigationStateContext';\nexport default function useOptionsGetters({\n  key,\n  getOptions,\n  getState\n}) {\n  const optionsGettersFromChild = React.useRef({});\n  const {\n    addOptionsGetter: parentAddOptionsGetter\n  } = React.useContext(NavigationStateContext);\n  const getOptionsFromListener = React.useCallback(() => {\n    for (let key in optionsGettersFromChild.current) {\n      if (optionsGettersFromChild.current.hasOwnProperty(key)) {\n        var _optionsGettersFromCh, _optionsGettersFromCh2;\n\n        const result = (_optionsGettersFromCh = (_optionsGettersFromCh2 = optionsGettersFromChild.current)[key]) === null || _optionsGettersFromCh === void 0 ? void 0 : _optionsGettersFromCh.call(_optionsGettersFromCh2); // null means unfocused route\n\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n  const getCurrentOptions = React.useCallback(() => {\n    var _getOptions;\n\n    if (getState) {\n      const state = getState();\n\n      if (state.routes[state.index].key !== key) {\n        // null means unfocused route\n        return null;\n      }\n    }\n\n    const optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return (_getOptions = getOptions === null || getOptions === void 0 ? void 0 : getOptions()) !== null && _getOptions !== void 0 ? _getOptions : undefined;\n  }, [getState, getOptionsFromListener, getOptions, key]);\n  React.useEffect(() => {\n    return parentAddOptionsGetter === null || parentAddOptionsGetter === void 0 ? void 0 : parentAddOptionsGetter(key, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n  const addOptionsGetter = React.useCallback((key, getter) => {\n    optionsGettersFromChild.current[key] = getter;\n    return () => {\n      optionsGettersFromChild.current[key] = undefined;\n    };\n  }, []);\n  return {\n    addOptionsGetter,\n    getCurrentOptions\n  };\n}","map":{"version":3,"sources":["useOptionsGetters.tsx"],"names":["getState","optionsGettersFromChild","React","addOptionsGetter","parentAddOptionsGetter","getOptionsFromListener","result","getCurrentOptions","state","optionsFromListener","getOptions"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,sBAAA,MAAA,0BAAA;AAGA,eAAe,SAAA,iBAAA,CAA2B;AAAA,EAAA,GAAA;AAAA,EAAA,UAAA;AAGxCA,EAAAA;AAHwC,CAA3B,EAQZ;AACD,QAAMC,uBAAuB,GAAGC,KAAK,CAALA,MAAAA,CAAhC,EAAgCA,CAAhC;AAIA,QAAM;AAAEC,IAAAA,gBAAgB,EAAEC;AAApB,MAA+CF,KAAK,CAALA,UAAAA,CAArD,sBAAqDA,CAArD;AAIA,QAAMG,sBAAsB,GAAG,KAAK,CAAL,WAAA,CAAkB,MAAM;AACrD,SAAK,IAAL,GAAA,IAAgBJ,uBAAuB,CAAvC,OAAA,EAAiD;AAC/C,UAAIA,uBAAuB,CAAvBA,OAAAA,CAAAA,cAAAA,CAAJ,GAAIA,CAAJ,EAAyD;AAAA,YAAA,qBAAA,EAAA,sBAAA;;AACvD,cAAMK,MAAM,GAAA,CAAA,qBAAA,GAAG,CAAA,sBAAA,GAAA,uBAAuB,CAAvB,OAAA,EAAH,GAAG,CAAH,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAG,qBAAA,CAAA,IAAA,CADwC,sBACxC,CAAf,CADuD,CAEvD;;AACA,YAAIA,MAAM,KAAV,IAAA,EAAqB;AACnB,iBAAA,MAAA;AACD;AACF;AACF;;AACD,WAAA,IAAA;AAV6B,GAAA,EAA/B,EAA+B,CAA/B;AAaA,QAAMC,iBAAiB,GAAG,KAAK,CAAL,WAAA,CAAkB,MAAM;AAAA,QAAA,WAAA;;AAChD,QAAA,QAAA,EAAc;AACZ,YAAMC,KAAK,GAAGR,QAAd,EAAA;;AACA,UAAIQ,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAlBA,KAAAA,EAAAA,GAAAA,KAAJ,GAAA,EAA2C;AACzC;AACA,eAAA,IAAA;AACD;AACF;;AAED,UAAMC,mBAAmB,GAAGJ,sBAA5B,EAAA;;AACA,QAAII,mBAAmB,KAAvB,IAAA,EAAkC;AAChC,aAAA,mBAAA;AACD;;AACD,WAAA,CAAA,WAAA,GAAOC,UAAP,KAAA,IAAOA,IAAAA,UAAP,KAAA,KAAA,CAAOA,GAAP,KAAA,CAAOA,GAAAA,UAAP,EAAA,MAAA,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,GAAA,WAAA,GAAA,SAAA;AAbwB,GAAA,EAcvB,CAAA,QAAA,EAAA,sBAAA,EAAA,UAAA,EAdH,GAcG,CAduB,CAA1B;AAgBAR,EAAAA,KAAK,CAALA,SAAAA,CAAgB,MAAM;AACpB,WAAOE,sBAAP,KAAA,IAAOA,IAAAA,sBAAP,KAAA,KAAA,CAAOA,GAAP,KAAA,CAAOA,GAAAA,sBAAsB,CAAA,GAAA,EAA7B,iBAA6B,CAA7B;AADFF,GAAAA,EAEG,CAAA,iBAAA,EAAA,sBAAA,EAFHA,GAEG,CAFHA;AAIA,QAAMC,gBAAgB,GAAG,KAAK,CAAL,WAAA,CACvB,CAAA,GAAA,EAAA,MAAA,KAA0D;AACxDF,IAAAA,uBAAuB,CAAvBA,OAAAA,CAAAA,GAAAA,IAAAA,MAAAA;AAEA,WAAO,MAAM;AACXA,MAAAA,uBAAuB,CAAvBA,OAAAA,CAAAA,GAAAA,IAAAA,SAAAA;AADF,KAAA;AAJqB,GAAA,EAAzB,EAAyB,CAAzB;AAWA,SAAO;AAAA,IAAA,gBAAA;AAELM,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import * as React from 'react';\nimport NavigationStateContext from './NavigationStateContext';\nimport { NavigationState } from '@react-navigation/routers';\n\nexport default function useOptionsGetters({\n  key,\n  getOptions,\n  getState,\n}: {\n  key?: string;\n  getOptions?: () => object | undefined;\n  getState?: () => NavigationState;\n}) {\n  const optionsGettersFromChild = React.useRef<\n    Record<string, (() => object | undefined | null) | undefined>\n  >({});\n\n  const { addOptionsGetter: parentAddOptionsGetter } = React.useContext(\n    NavigationStateContext\n  );\n\n  const getOptionsFromListener = React.useCallback(() => {\n    for (let key in optionsGettersFromChild.current) {\n      if (optionsGettersFromChild.current.hasOwnProperty(key)) {\n        const result = optionsGettersFromChild.current[key]?.();\n        // null means unfocused route\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }, []);\n\n  const getCurrentOptions = React.useCallback(() => {\n    if (getState) {\n      const state = getState();\n      if (state.routes[state.index].key !== key) {\n        // null means unfocused route\n        return null;\n      }\n    }\n\n    const optionsFromListener = getOptionsFromListener();\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n    return getOptions?.() ?? undefined;\n  }, [getState, getOptionsFromListener, getOptions, key]);\n\n  React.useEffect(() => {\n    return parentAddOptionsGetter?.(key!, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n\n  const addOptionsGetter = React.useCallback(\n    (key: string, getter: () => object | undefined | null) => {\n      optionsGettersFromChild.current[key] = getter;\n\n      return () => {\n        optionsGettersFromChild.current[key] = undefined;\n      };\n    },\n    []\n  );\n\n  return {\n    addOptionsGetter,\n    getCurrentOptions,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}