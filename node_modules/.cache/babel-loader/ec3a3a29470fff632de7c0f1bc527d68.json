{"ast":null,"code":"var _jsxFileName = \"/Users/treeeest/Projects/glm/src/components/messages/Message.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { View, Text, TextInput, FlatList, TouchableOpacity } from 'react-native';\nimport Replies from './Replies';\nimport { replyToMessage } from '../../actions/messages';\n\nfunction Message(props) {\n  const [replyMessage, setReplyMessage] = React.useState(\"\");\n  useEffect(() => {}, []);\n\n  const replyToMessage = () => {\n    const newReply = {\n      name: \"Default\",\n      text: replyMessage\n    };\n    console.log(props.index);\n    console.log(\"REPLY: \", replyMessage);\n    props.replyToMessage(props.index, newReply);\n    setReplyMessage(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(View, {\n    key: props.index,\n    style: {\n      display: 'flex',\n      margin: 10,\n      padding: 20,\n      backgroundColor: '#EDEDEE'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, props.item.name), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, props.item.text)), /*#__PURE__*/React.createElement(Replies, {\n    replies: props.item.replies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#EDEDEE'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TouchableOpacity, {\n    style: {\n      padding: 10,\n      backgroundColor: '#6995F5'\n    },\n    onPress: replyToMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Reply\")), /*#__PURE__*/React.createElement(Text, {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Message:\"), /*#__PURE__*/React.createElement(TextInput, {\n    onChangeText: setReplyMessage,\n    value: replyMessage,\n    style: {\n      borderWidth: 1,\n      borderColor: '#707070',\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    replyToMessage: (index, newMessage) => dispatch(replyToMessage(index, newMessage))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Message);","map":{"version":3,"sources":["/Users/treeeest/Projects/glm/src/components/messages/Message.js"],"names":["React","useEffect","connect","View","Text","TextInput","FlatList","TouchableOpacity","Replies","replyToMessage","Message","props","replyMessage","setReplyMessage","useState","newReply","name","text","console","log","index","display","margin","padding","backgroundColor","flexDirection","justifyContent","fontSize","item","replies","alignItems","borderWidth","borderColor","height","mapDispatchToProps","dispatch","newMessage"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { View, Text, TextInput, FlatList, TouchableOpacity } from 'react-native';\nimport Replies from './Replies';\n\nimport { replyToMessage } from '../../actions/messages';\n\nfunction Message(props) {\n    const [ replyMessage, setReplyMessage ] = React.useState(\"\")\n\n    useEffect(() => {\n\n    }, []);\n\n    const replyToMessage = () => {\n        const newReply = {\n            name: \"Default\",\n            text: replyMessage\n        };\n\n        console.log(props.index);\n        console.log(\"REPLY: \", replyMessage);\n        \n        props.replyToMessage(props.index, newReply);\n        setReplyMessage(\"\");\n    }\n\n    return (\n        <View key={props.index} style={{display: 'flex', margin: 10, padding: 20, backgroundColor: '#EDEDEE'}}>\n            <View style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n                <Text style={{fontSize: 20}}>{props.item.name}</Text>\n                <Text>{props.item.text}</Text>\n            </View>\n            <Replies replies={props.item.replies} />\n            <View style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', backgroundColor: '#EDEDEE'}}>\n                <TouchableOpacity style={{padding: 10, backgroundColor: '#6995F5'}} onPress={replyToMessage}>\n                    <Text>Reply</Text>\n                </TouchableOpacity>\n                <Text style={{padding: 10}}>Message:</Text>\n                <TextInput onChangeText={setReplyMessage} value={replyMessage} style={{borderWidth: 1, borderColor: '#707070', height: 30}} />\n            </View>\n        </View>\n    );\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        replyToMessage: (index, newMessage) => dispatch(replyToMessage(index, newMessage))\n\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Message);\n"]},"metadata":{},"sourceType":"module"}