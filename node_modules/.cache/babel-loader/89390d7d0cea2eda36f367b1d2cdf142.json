{"ast":null,"code":"export function goBack() {\n  return {\n    type: 'GO_BACK'\n  };\n}\nexport function navigate(...args) {\n  if (typeof args[0] === 'string') {\n    return {\n      type: 'NAVIGATE',\n      payload: {\n        name: args[0],\n        params: args[1]\n      }\n    };\n  } else {\n    const payload = args[0] || {};\n\n    if (!payload.hasOwnProperty('key') && !payload.hasOwnProperty('name')) {\n      throw new Error('You need to specify name or key when calling navigate with an object as the argument. See https://reactnavigation.org/docs/navigation-actions#navigate for usage.');\n    }\n\n    return {\n      type: 'NAVIGATE',\n      payload\n    };\n  }\n}\nexport function reset(state) {\n  return {\n    type: 'RESET',\n    payload: state\n  };\n}\nexport function setParams(params) {\n  return {\n    type: 'SET_PARAMS',\n    payload: {\n      params\n    }\n  };\n}","map":{"version":3,"sources":["CommonActions.tsx"],"names":["type","args","payload","name","params","state"],"mappings":"AA6BA,OAAO,SAAA,MAAA,GAA0B;AAC/B,SAAO;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD;AAQD,OAAO,SAAA,QAAA,CAAkB,GAAlB,IAAA,EAAwC;AAC7C,MAAI,OAAOC,IAAI,CAAX,CAAW,CAAX,KAAJ,QAAA,EAAiC;AAC/B,WAAO;AAAED,MAAAA,IAAI,EAAN,UAAA;AAAoBE,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAEF,IAAI,CAAZ,CAAY,CAAZ;AAAiBG,QAAAA,MAAM,EAAEH,IAAI,CAAA,CAAA;AAA7B;AAA7B,KAAP;AADF,GAAA,MAEO;AACL,UAAMC,OAAO,GAAGD,IAAI,CAAJA,CAAI,CAAJA,IAAhB,EAAA;;AAEA,QAAI,CAACC,OAAO,CAAPA,cAAAA,CAAD,KAACA,CAAD,IAAkC,CAACA,OAAO,CAAPA,cAAAA,CAAvC,MAAuCA,CAAvC,EAAuE;AACrE,YAAM,IAAA,KAAA,CAAN,mKAAM,CAAN;AAGD;;AAED,WAAO;AAAEF,MAAAA,IAAI,EAAN,UAAA;AAAoBE,MAAAA;AAApB,KAAP;AACD;AACF;AAED,OAAO,SAAA,KAAA,CAAA,KAAA,EAA6D;AAClE,SAAO;AAAEF,IAAAA,IAAI,EAAN,OAAA;AAAiBE,IAAAA,OAAO,EAAEG;AAA1B,GAAP;AACD;AAED,OAAO,SAAA,SAAA,CAAA,MAAA,EAA2C;AAChD,SAAO;AAAEL,IAAAA,IAAI,EAAN,YAAA;AAAsBE,IAAAA,OAAO,EAAE;AAAEE,MAAAA;AAAF;AAA/B,GAAP;AACD","sourcesContent":["import { NavigationState, PartialState } from './types';\n\nexport type Action =\n  | {\n      type: 'GO_BACK';\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'NAVIGATE';\n      payload:\n        | { key: string; name?: undefined; params?: object }\n        | { name: string; key?: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'RESET';\n      payload: PartialState<NavigationState>;\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'SET_PARAMS';\n      payload: { params?: object };\n      source?: string;\n      target?: string;\n    };\n\nexport function goBack(): Action {\n  return { type: 'GO_BACK' };\n}\n\nexport function navigate(\n  route:\n    | { key: string; params?: object }\n    | { name: string; key?: string; params?: object }\n): Action;\nexport function navigate(name: string, params?: object): Action;\nexport function navigate(...args: any): Action {\n  if (typeof args[0] === 'string') {\n    return { type: 'NAVIGATE', payload: { name: args[0], params: args[1] } };\n  } else {\n    const payload = args[0] || {};\n\n    if (!payload.hasOwnProperty('key') && !payload.hasOwnProperty('name')) {\n      throw new Error(\n        'You need to specify name or key when calling navigate with an object as the argument. See https://reactnavigation.org/docs/navigation-actions#navigate for usage.'\n      );\n    }\n\n    return { type: 'NAVIGATE', payload };\n  }\n}\n\nexport function reset(state: PartialState<NavigationState>): Action {\n  return { type: 'RESET', payload: state };\n}\n\nexport function setParams(params: object): Action {\n  return { type: 'SET_PARAMS', payload: { params } };\n}\n"]},"metadata":{},"sourceType":"module"}