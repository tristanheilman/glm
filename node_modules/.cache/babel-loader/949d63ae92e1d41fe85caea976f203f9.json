{"ast":null,"code":"import * as React from 'react';\nimport CurrentRenderContext from './CurrentRenderContext';\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\n\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors\n}) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}","map":{"version":3,"sources":["useCurrentRender.tsx"],"names":["descriptors","current","React","navigation","state"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,OAAA,oBAAA,MAAA,wBAAA;AAWA;;;;;AAIA,eAAe,SAAA,gBAAA,CAA0B;AAAA,EAAA,KAAA;AAAA,EAAA,UAAA;AAGvCA,EAAAA;AAHuC,CAA1B,EAIH;AACV,QAAMC,OAAO,GAAGC,KAAK,CAALA,UAAAA,CAAhB,oBAAgBA,CAAhB;;AAEA,MAAID,OAAO,IAAIE,UAAU,CAAzB,SAAeA,EAAf,EAAuC;AACrCF,IAAAA,OAAO,CAAPA,OAAAA,GAAkBD,WAAW,CAACI,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAlBA,KAAAA,EAAZJ,GAAW,CAAXA,CAAlBC,OAAAA;AACD;AACF","sourcesContent":["import * as React from 'react';\nimport { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport CurrentRenderContext from './CurrentRenderContext';\nimport { Descriptor, NavigationHelpers } from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: {\n    [key: string]: Descriptor<ParamListBase, string, NavigationState, object>;\n  };\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}