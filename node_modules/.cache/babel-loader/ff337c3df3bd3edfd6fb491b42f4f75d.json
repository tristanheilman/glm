{"ast":null,"code":"import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\n\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\");\n  }\n\n  React.useEffect(() => {\n    const {\n      register,\n      unregister\n    } = container;\n    register(key);\n    return () => unregister(key);\n  }, [container, key]);\n  return key;\n}","map":{"version":3,"sources":["useRegisterNavigator.tsx"],"names":["React","nanoid","container","unregister","register"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,sBAAA,QAAA,yBAAA;AAEA;;;;;AAIA,eAAe,SAAA,oBAAA,GAAgC;AAC7C,QAAM,CAAA,GAAA,IAAQA,KAAK,CAALA,QAAAA,CAAe,MAAMC,MAAnC,EAAcD,CAAd;AACA,QAAME,SAAS,GAAGF,KAAK,CAALA,UAAAA,CAAlB,sBAAkBA,CAAlB;;AAEA,MAAIE,SAAS,KAAb,SAAA,EAA6B;AAC3B,UAAM,IAAA,KAAA,CAAN,wFAAM,CAAN;AAGD;;AAEDF,EAAAA,KAAK,CAALA,SAAAA,CAAgB,MAAM;AACpB,UAAM;AAAA,MAAA,QAAA;AAAYG,MAAAA;AAAZ,QAAN,SAAA;AAEAC,IAAAA,QAAQ,CAARA,GAAQ,CAARA;AAEA,WAAO,MAAMD,UAAU,CAAvB,GAAuB,CAAvB;AALFH,GAAAA,EAMG,CAAA,SAAA,EANHA,GAMG,CANHA;AAQA,SAAA,GAAA;AACD","sourcesContent":["import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n"]},"metadata":{},"sourceType":"module"}