{"ast":null,"code":"var _jsxFileName = \"/Users/treeeest/Projects/glm/src/components/messages/MessageBoard.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { View, Text, FlatList, TouchableOpacity } from 'react-native';\nimport Message from './Message';\nimport { setMessageBoard } from '../../actions/messages';\n\nfunction MessageBoard(props) {\n  useEffect(() => {// TODO Fetch classes function here\n  }, []);\n  return /*#__PURE__*/React.createElement(View, {\n    style: {\n      display: 'flex',\n      flex: 1,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      paddingTop: 20,\n      paddingBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TouchableOpacity, {\n    style: {\n      padding: 10,\n      backgroundColor: '#6995F5'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"New Message\"))), /*#__PURE__*/React.createElement(FlatList, {\n    data: props.messages,\n    renderItem: ({\n      item,\n      index\n    }) => /*#__PURE__*/React.createElement(Message, {\n      navigation: props.navigation,\n      item: item,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 48\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n}\n\nconst mapStateToProps = ({\n  messageBoard\n}) => ({\n  messages: messageBoard.messages\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMessages: messages => dispatch(setMessageBoard(messages))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBoard);","map":{"version":3,"sources":["/Users/treeeest/Projects/glm/src/components/messages/MessageBoard.js"],"names":["React","useEffect","connect","View","Text","FlatList","TouchableOpacity","Message","setMessageBoard","MessageBoard","props","display","flex","padding","flexDirection","justifyContent","paddingTop","paddingBottom","backgroundColor","messages","item","index","navigation","mapStateToProps","messageBoard","mapDispatchToProps","dispatch","setMessages"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,EAA+BC,gBAA/B,QAAuD,cAAvD;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAEzBT,EAAAA,SAAS,CAAC,MAAM,CACZ;AAEH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACU,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,IAAI,EAAE,CAAxB;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACF,MAAAA,OAAO,EAAE,MAAV;AAAkBG,MAAAA,aAAa,EAAE,KAAjC;AAAwCC,MAAAA,cAAc,EAAE,cAAxD;AAAwEC,MAAAA,UAAU,EAAE,EAApF;AAAwFC,MAAAA,aAAa,EAAE;AAAvG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAACJ,MAAAA,OAAO,EAAE,EAAV;AAAcK,MAAAA,eAAe,EAAE;AAA/B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,CADJ,eAMI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAER,KAAK,CAACS,QADhB;AAEI,IAAA,UAAU,EAAE,CAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAD,kBAAmB,oBAAC,OAAD;AAAS,MAAA,UAAU,EAAEX,KAAK,CAACY,UAA3B;AAAuC,MAAA,IAAI,EAAEF,IAA7C;AAAmD,MAAA,KAAK,EAAEC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAaH;;AAGD,MAAME,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAuB;AAC3CL,EAAAA,QAAQ,EAAEK,YAAY,CAACL;AADoB,CAAvB,CAAxB;;AAIA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,WAAW,EAAGR,QAAD,IAAcO,QAAQ,CAAClB,eAAe,CAACW,QAAD,CAAhB;AADhC,GAAP;AAGH,CAJD;;AAMA,eAAejB,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,YAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { View, Text, FlatList, TouchableOpacity } from 'react-native';\n\nimport Message from './Message';\n\nimport { setMessageBoard } from '../../actions/messages';\n\nfunction MessageBoard(props) {\n\n    useEffect(() => {\n        // TODO Fetch classes function here\n\n    }, []);\n\n    return (\n        <View style={{display: 'flex', flex: 1, padding: 10}}>\n            <View style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-around', paddingTop: 20, paddingBottom: 20}}>\n                <TouchableOpacity style={{padding: 10, backgroundColor: '#6995F5'}}>\n                    <Text>New Message</Text>\n                </TouchableOpacity>\n            </View>\n            <FlatList\n                data={props.messages}\n                renderItem={({item, index}) => <Message navigation={props.navigation} item={item} index={index}/>}\n            />\n        </View>\n    );\n}\n\n\nconst mapStateToProps = ({ messageBoard }) => ({\n    messages: messageBoard.messages\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setMessages: (messages) => dispatch(setMessageBoard(messages))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBoard);\n"]},"metadata":{},"sourceType":"module"}