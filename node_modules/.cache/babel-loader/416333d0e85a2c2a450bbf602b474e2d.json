{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { Animated, View } from 'react-native';\nlet ENABLE_SCREENS = true;\nexport function enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\nexport class NativeScreen extends React.Component {\n  render() {\n    const _this$props = this.props,\n          {\n      active,\n      style\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"active\", \"style\"]);\n\n    return /*#__PURE__*/React.createElement(View, _extends({\n      style: [style, ENABLE_SCREENS && !active ? {\n        display: 'none'\n      } : null]\n    }, rest));\n  }\n\n}\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\nexport const ScreenContainer = View;\nexport const NativeScreenContainer = View;","map":{"version":3,"sources":["index.js"],"names":["ENABLE_SCREENS","shouldEnableScreens","React","render","style","rest","display","Screen","Animated","ScreenContainer","NativeScreenContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,EAAA,IAAA,QAAA,cAAA;AAEA,IAAIA,cAAc,GAAlB,IAAA;AAEA,OAAO,SAAA,aAAA,CAAuBC,mBAAmB,GAA1C,IAAA,EAAmD;AACxDD,EAAAA,cAAc,GAAdA,mBAAAA;AACD;AAED,OAAO,SAAA,cAAA,GAA0B;AAC/B,SAAA,cAAA;AACD;AAED,OAAO,MAAA,YAAA,SAA2BE,KAAK,CAAhC,SAAA,CAA2C;AAChDC,EAAAA,MAAM,GAAG;AACP,UAAA,WAAA,GAAmC,KAAnC,KAAA;AAAA,UAAM;AAAA,MAAA,MAAA;AAAUC,MAAAA;AAAV,QAAN,WAAA;AAAA,UAA0BC,IAA1B,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,QAAA,EAAA,OAAA,CAAA,CAAA;;AAEA,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,MAAA,KAAK,EAAE,CAAA,KAAA,EAAQ,cAAc,IAAI,CAAlB,MAAA,GAA4B;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA5B,GAAR,IAAA;AADT,KAAA,EADF,IACE,CAAA,CADF;AAMD;;AAV+C;AAalD,OAAO,MAAMC,MAAM,GAAGC,QAAQ,CAARA,uBAAAA,CAAf,YAAeA,CAAf;AAEP,OAAO,MAAMC,eAAe,GAArB,IAAA;AAEP,OAAO,MAAMC,qBAAqB,GAA3B,IAAA","sourcesContent":["import React from 'react';\nimport { Animated, View } from 'react-native';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\nexport class NativeScreen extends React.Component {\n  render() {\n    const { active, style, ...rest } = this.props;\n\n    return (\n      <View\n        style={[style, ENABLE_SCREENS && !active ? { display: 'none' } : null]}\n        {...rest}\n      />\n    );\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const ScreenContainer = View;\n\nexport const NativeScreenContainer = View;\n"]},"metadata":{},"sourceType":"module"}