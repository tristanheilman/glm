{"ast":null,"code":"export default function memoize(callback) {\n  let previous;\n  let result;\n  return (...dependencies) => {\n    let hasChanged = false;\n\n    if (previous) {\n      if (previous.length !== dependencies.length) {\n        hasChanged = true;\n      } else {\n        for (let i = 0; i < previous.length; i++) {\n          if (previous[i] !== dependencies[i]) {\n            hasChanged = true;\n            break;\n          }\n        }\n      }\n    } else {\n      hasChanged = true;\n    }\n\n    previous = dependencies;\n\n    if (hasChanged || result === undefined) {\n      result = callback(...dependencies);\n    }\n\n    return result;\n  };\n}","map":{"version":3,"sources":["memoize.tsx"],"names":["hasChanged","previous","dependencies","i","result","callback"],"mappings":"AAAA,eAAe,SAAA,OAAA,CAAA,QAAA,EAEb;AACA,MAAA,QAAA;AACA,MAAA,MAAA;AAEA,SAAO,CAAC,GAAD,YAAA,KAAmC;AACxC,QAAIA,UAAU,GAAd,KAAA;;AAEA,QAAA,QAAA,EAAc;AACZ,UAAIC,QAAQ,CAARA,MAAAA,KAAoBC,YAAY,CAApC,MAAA,EAA6C;AAC3CF,QAAAA,UAAU,GAAVA,IAAAA;AADF,OAAA,MAEO;AACL,aAAK,IAAIG,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGF,QAAQ,CAA5B,MAAA,EAAqCE,CAArC,EAAA,EAA0C;AACxC,cAAIF,QAAQ,CAARA,CAAQ,CAARA,KAAgBC,YAAY,CAAhC,CAAgC,CAAhC,EAAqC;AACnCF,YAAAA,UAAU,GAAVA,IAAAA;AACA;AACD;AACF;AACF;AAVH,KAAA,MAWO;AACLA,MAAAA,UAAU,GAAVA,IAAAA;AACD;;AAEDC,IAAAA,QAAQ,GAARA,YAAAA;;AAEA,QAAID,UAAU,IAAII,MAAM,KAAxB,SAAA,EAAwC;AACtCA,MAAAA,MAAM,GAAGC,QAAQ,CAAC,GAAlBD,YAAiB,CAAjBA;AACD;;AAED,WAAA,MAAA;AAxBF,GAAA;AA0BD","sourcesContent":["export default function memoize<Result, Deps extends readonly any[]>(\n  callback: (...deps: Deps) => Result\n) {\n  let previous: Deps | undefined;\n  let result: Result | undefined;\n\n  return (...dependencies: Deps): Result => {\n    let hasChanged = false;\n\n    if (previous) {\n      if (previous.length !== dependencies.length) {\n        hasChanged = true;\n      } else {\n        for (let i = 0; i < previous.length; i++) {\n          if (previous[i] !== dependencies[i]) {\n            hasChanged = true;\n            break;\n          }\n        }\n      }\n    } else {\n      hasChanged = true;\n    }\n\n    previous = dependencies;\n\n    if (hasChanged || result === undefined) {\n      result = callback(...dependencies);\n    }\n\n    return result;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}