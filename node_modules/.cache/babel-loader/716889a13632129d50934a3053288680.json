{"ast":null,"code":"import update from 'immutability-helper';\nimport { SET_MESSAGE_BOARD, ADD_NEW_MESSAGE, REPLY_TO_MESSAGE } from '../actions/messages';\nimport { messageData } from './data';\nconst initialState = {\n  messages: messageData\n};\nexport default function eventsReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_MESSAGE_BOARD:\n      return Object.assign({}, state, {\n        messages: action.payload\n      });\n\n    case ADD_NEW_MESSAGE:\n      return update(state, {\n        messages: {\n          $push: [action.payload]\n        }\n      });\n\n    case REPLY_TO_MESSAGE:\n      return update(state, {\n        messages: {\n          [action.index]: {\n            replies: {\n              $push: action.payload\n            }\n          }\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/treeeest/Projects/glm/src/reducers/messages.js"],"names":["update","SET_MESSAGE_BOARD","ADD_NEW_MESSAGE","REPLY_TO_MESSAGE","messageData","initialState","messages","eventsReducer","state","action","type","Object","assign","payload","$push","index","replies"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,SACIC,iBADJ,EAEIC,eAFJ,EAGIC,gBAHJ,QAIO,qBAJP;AAMA,SAASC,WAAT,QAA4B,QAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAEF;AADO,CAArB;AAIA,eAAe,SAASG,aAAT,CAAuBC,KAAK,GAAGH,YAA/B,EAA6CI,MAA7C,EAAqD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,iBAAL;AACI,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BF,QAAAA,QAAQ,EAAEG,MAAM,CAACI;AADW,OAAzB,CAAP;;AAGJ,SAAKX,eAAL;AACI,aAAOF,MAAM,CAACQ,KAAD,EAAQ;AACjBF,QAAAA,QAAQ,EAAE;AAACQ,UAAAA,KAAK,EAAE,CAACL,MAAM,CAACI,OAAR;AAAR;AADO,OAAR,CAAb;;AAGJ,SAAKV,gBAAL;AACI,aAAOH,MAAM,CAACQ,KAAD,EAAQ;AACjBF,QAAAA,QAAQ,EAAE;AACN,WAACG,MAAM,CAACM,KAAR,GAAgB;AACZC,YAAAA,OAAO,EAAE;AAACF,cAAAA,KAAK,EAAEL,MAAM,CAACI;AAAf;AADG;AADV;AADO,OAAR,CAAb;;AAOJ;AACI,aAAOL,KAAP;AAlBR;AAoBH","sourcesContent":["import update from 'immutability-helper';\n\nimport {\n    SET_MESSAGE_BOARD,\n    ADD_NEW_MESSAGE,\n    REPLY_TO_MESSAGE\n} from '../actions/messages';\n\nimport { messageData } from './data';\n\nconst initialState = {\n    messages: messageData\n}\n\nexport default function eventsReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_MESSAGE_BOARD:\n            return Object.assign({}, state, {\n                messages: action.payload\n            });\n        case ADD_NEW_MESSAGE:\n            return update(state, {\n                messages: {$push: [action.payload]}\n            })\n        case REPLY_TO_MESSAGE:\n            return update(state, {\n                messages: {\n                    [action.index]: {\n                        replies: {$push: action.payload}\n                    }\n                }\n            });\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}